[[jobs]]
name = "Brewfile"
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/Brewfile"
path = "{{ home_dir }}/.Brewfile"
state = "link"

[[jobs]]
type = "command"
argv = ["bundle", "install", "--global", "--no-upgrade", "--verbose"]
command = "brew"
needs = ["Brewfile"]
when = {{ has_executable(exe="brew") }}

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/alacritty.yml"
path = "{{ config_dir }}/alacritty/alacritty.yml"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/hyper.js"
path = "{{ config_dir }}/Hyper/hyper.js"
state = "link"
# TODO: use data_dir on macOS

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/bash_profile"
path = "{{ home_dir }}/.bash_profile"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/bashrc"
path = "{{ home_dir }}/.bashrc"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/inputrc"
path = "{{ home_dir }}/.inputrc"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/profile"
path = "{{ home_dir }}/.profile"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/psqlrc"
path = "{{ home_dir }}/.psqlrc"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/tmux.conf"
path = "{{ home_dir }}/.tmux.conf"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/sway"
path = "{{ config_dir }}/sway/config"
state = "link"
when = {{ is_os_linux }}

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/waybar.json"
path = "{{ config_dir }}/waybar/config"
state = "link"
when = {{ is_os_linux }}

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/waybar.css"
path = "{{ config_dir }}/waybar/style.css"
state = "link"
when = {{ is_os_linux }}

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/wofi"
path = "{{ config_dir }}/wofi/config"
state = "link"
when = {{ is_os_linux }}

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/wofi.css"
path = "{{ config_dir }}/wofi/style.css"
state = "link"
when = {{ is_os_linux }}

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/zshenv"
path = "{{ home_dir }}/.zshenv"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/zshlogin"
path = "{{ home_dir }}/.zlogin"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/zshprofile"
path = "{{ home_dir }}/.zprofile"
state = "link"

[[jobs]]
type = "file"
force = true
src = "{{ home_dir }}/.dotfiles/config/zshrc"
path = "{{ home_dir }}/.zshrc"
state = "link"

[[jobs]]
type = "command"
argv = ["remote-add", "--if-not-exists", "--user", "flathub", "https://flathub.org/repo/flathub.flatpakrepo"]
command = "flatpak"
when = {{ has_executable(exe="flatpak") }}

[[jobs]]
type = "command"
argv = ["update", "--user", "--assumeyes"]
command = "flatpak"
when = {{ has_executable(exe="flatpak") }}

[[jobs]]
name = "rebuild font caches"
type = "command"
argv = ["--really-force"]
command = "fc-cache"
when = {{ has_executable(exe="fc-cache") }}
